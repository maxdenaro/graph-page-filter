class GraphPageFilter{constructor(t,e){this.options=Object.assign({highlightClass:"filter-highlight",childClass:"filter-element",hiddenClass:"filter-hidden",onInput:()=>{}},e),this.input=document.querySelector(t),this.itemParent=document.querySelector(`[data-items-target="${this.input.dataset.items}"]`),this.items=this.itemParent.querySelectorAll(`.${this.options.childClass}`),this.rex=/(<span.+?>)(.+?)(<\/span>)/g,this.rexAtt="gi",this.event()}event(){this.input&&this.input.addEventListener("input",t=>{if(t.which&&13===t.which||t.keyCode&&13===t.keyCode)return!1;{let e=t.currentTarget.value;e.length?(this.clear(),[].filter.call(this.items,t=>{if(t.textContent.toUpperCase().includes(e.toUpperCase())){let i=t.textContent;t.innerHTML=i.replace(new RegExp(e,this.rexAtt),t=>[`<span class="${this.options.highlightClass}">${t}</span>`].join(""))}else t.classList.add(this.options.hiddenClass)})):this.clear()}this.options.onInput(this)})}clear(){this.items.forEach(t=>{t.classList.remove(this.options.hiddenClass),t.innerHTML=`${t.innerHTML.replace(new RegExp(this.rex),"$2")}`})}}